name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install minification tools
        run: |
          npm install -g terser
          npm install -g clean-css-cli
          npm install -g html-minifier-terser

      - name: Replace Firebase Configuration
        run: |
          # Replace Firebase config placeholders with secrets
          sed -i 's/FIREBASE_API_KEY_PLACEHOLDER/${{ secrets.FIREBASE_API_KEY }}/g' config.js
          sed -i 's/FIREBASE_AUTH_DOMAIN_PLACEHOLDER/${{ secrets.FIREBASE_AUTH_DOMAIN }}/g' config.js
          sed -i 's/FIREBASE_PROJECT_ID_PLACEHOLDER/${{ secrets.FIREBASE_PROJECT_ID }}/g' config.js
          sed -i 's/FIREBASE_STORAGE_BUCKET_PLACEHOLDER/${{ secrets.FIREBASE_STORAGE_BUCKET }}/g' config.js
          sed -i 's/FIREBASE_MESSAGING_SENDER_ID_PLACEHOLDER/${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}/g' config.js
          sed -i 's/FIREBASE_APP_ID_PLACEHOLDER/${{ secrets.FIREBASE_APP_ID }}/g' config.js
          sed -i 's/FIREBASE_MEASUREMENT_ID_PLACEHOLDER/${{ secrets.FIREBASE_MEASUREMENT_ID }}/g' config.js
          
          # Replace authorized emails and phone numbers
          sed -i 's/AUTHORIZED_ADMIN_EMAILS_PLACEHOLDER/${{ secrets.AUTHORIZED_ADMIN_EMAILS }}/g' config.js
          sed -i 's/AUTHORIZED_PHONE_NUMBERS_PLACEHOLDER/${{ secrets.AUTHORIZED_PHONE_NUMBERS }}/g' config.js

      - name: Minify JavaScript files
        run: |
          # Create minified directory
          mkdir -p minified
          
          # Minify JavaScript files with obfuscation
          terser scripts.js --compress --mangle --output minified/scripts.min.js
          terser admin.js --compress --mangle --output minified/admin.min.js
          terser config.js --compress --mangle --output minified/config.min.js
          
          # Replace original files with minified versions
          mv minified/scripts.min.js scripts.js
          mv minified/admin.min.js admin.js
          mv minified/config.min.js config.js

      - name: Minify CSS files
        run: |
          # Minify CSS files
          cleancss styles.css --output styles.min.css
          cleancss admin-styles.css --output admin-styles.min.css
          
          # Replace original files with minified versions
          mv styles.min.css styles.css
          mv admin-styles.min.css admin-styles.css

      - name: Minify HTML files
        run: |
          # Minify HTML files
          html-minifier-terser --input-dir . --output-dir . --file-ext html \
            --remove-comments \
            --remove-optional-tags \
            --remove-redundant-attributes \
            --remove-script-type-attributes \
            --remove-tag-whitespace \
            --use-short-doctype \
            --collapse-whitespace \
            --minify-css true \
            --minify-js true \
            --process-conditional-comments \
            --sort-attributes \
            --sort-class-name

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
